name: Deploy to ECS via Fargate

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Build Docker, Push to ECR, Plan & Apply Infra
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/health-agent:latest
          echo "Building and pushing image: $IMAGE_URI"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init & Plan
        id: tfplan
        run: |
          cd infra
          terraform init -input=false
          terraform plan -input=false -out=plan.out > plan.txt
          if grep -q "No changes. Infrastructure is up-to-date." plan.txt; then
            echo "No changes detected, skipping apply"
            echo "SKIP_APPLY=true" >> $GITHUB_ENV
          else
            echo "Changes detected, will apply"
            echo "SKIP_APPLY=false" >> $GITHUB_ENV
          fi

      - name: Terraform Apply
        if: env.SKIP_APPLY == 'false'
        run: |
          cd infra
          terraform apply -auto-approve plan.out
